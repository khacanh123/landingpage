{"version":3,"sources":["web/pages/ListTest.js","web/firebase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"names":["ListTest","useState","listUser","setListUser","test","setTest","password","setPassword","useEffect","a","firebase","database","ref","on","snapshot","todos","val","todoList","id","push","getuser","token","localStorage","getItem","decode","jwtDecode","className","style","color","mssv","data","onClick","removeItem","window","location","href","onChange","e","target","value","map","key","baithi","type","chk","alert","matkhau","setItem","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","_defineProperty","obj","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","runtime","exports","undefined","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args"],"mappings":"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","file":"static/js/12.481f5843.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\nimport firebase from '../firebase';\r\nconst ListTest = () => {\r\n    const [listUser, setListUser] = useState([]);\r\n    const [test, setTest] = useState('');\r\n    const [password, setPassword] = useState('')\r\n  useEffect(()=>{\r\n    const getuser = async () => {\r\n      const todoRef = await firebase.database().ref('test');\r\n      todoRef.on('value', (snapshot) => {\r\n       const todos = snapshot.val();\r\n       const todoList = [];\r\n       for (let id in todos) {\r\n               todoList.push({ id, ...todos[id] });\r\n       }\r\n       setListUser(todoList);\r\n     });\r\n    }\r\n    getuser();\r\n  },[])\r\n  let token = localStorage.getItem('tokentest');\r\n    let decode = token === null ? {} : jwtDecode(token);\r\n    const CheckTest = () => {\r\n        let chk = true;\r\n        if(test === '' || password === ''){\r\n            return alert(\"Vui lòng chọn đề thi và nhập mật khẩu bài thi\");\r\n        }\r\n        listUser.map((key) =>{\r\n            if(key.id === test && key.matkhau === password){\r\n                chk = false;\r\n                localStorage.setItem('bt',key.id);\r\n               return window.location.href = '/go-test/'+key.id;\r\n            }\r\n        })\r\n        if(chk){\r\n           return alert(\"Mật khẩu bài thi không đúng\");\r\n        }\r\n    }\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        return window.location.href = '/login'\r\n    }\r\n    return(\r\n        <div className=\"container-fluid row \">\r\n            <div className=\"col-lg-6 \">\r\n                <h2 className=\"text-center\" style={{color: 'red'}}>Huha Test</h2>\r\n                <h5 className=\"text-right\">Chào {decode.mssv +' - '+decode.data} <a onClick={logout}>Đăng xuất</a></h5>\r\n                <div className=\"form-group\">\r\n                    <label>Chọn bài thi:</label>\r\n                    <select className=\"form-control\" onChange={(e) => setTest(e.target.value)}>\r\n                        <option>Chọn ----</option>\r\n                        {listUser.map((key => (\r\n                            <option value={key.id}>{key.baithi}</option>\r\n                        )))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Nhập mật khẩu bài thi</label>\r\n                    <input className=\"form-control\" type=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n                </div>\r\n                <button className=\"btn btn-primary btn-block\" onClick={CheckTest}>Vào thi</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ListTest;","import firebase from \"firebase/app\";  \r\nimport 'firebase/storage'\r\nimport 'firebase/analytics'\r\nimport 'firebase/database'\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCwPtJTNRKzmp6eLwDGgRRA0vMsWoQW1hg\",\r\n  authDomain: \"phuong-f6d83.firebaseapp.com\",\r\n  projectId: \"phuong-f6d83\",\r\n  storageBucket: \"phuong-f6d83.appspot.com\",\r\n  messagingSenderId: \"848745336320\",\r\n  appId: \"1:848745336320:web:c436f66c44f317bd34d2e5\",\r\n  measurementId: \"G-7V4WC826HX\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n  export default firebase;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"sourceRoot":""}